import cv2
# import numpy as np

img = cv2.imread('v1.jpg')

#
gaussian1 = cv2.GaussianBlur(img,(5,5),1)
# GaussianBlur(src, ksize, sigmaX[, dst[, sigmaY[, borderType]]]) -> dst
#src是输入图像，ksize是滤波器模板窗口的大小,dst为输出图像；
参数详解如下：
    src，输入图像，即源图像，填Mat类的对象即可。它可以是单独的任意通道数的图片，但需要注意，图片深度应该为CV_8U,CV_16U, CV_16S, CV_32F 以及 CV_64F之一。
    dst，即目标图像，需要和源图片有一样的尺寸和类型。比如可以用Mat::Clone，以源图片为模板，来初始化得到如假包换的目标图。
    ksize，高斯内核的大小。其中ksize.width和ksize.height可以不同，但他们都必须为正数和奇数（并不能理解）。或者，它们可以是零的，它们都是由sigma计算而来。
    sigmaX，表示高斯核函数在X方向的的标准偏差。
    sigmaY，表示高斯核函数在Y方向的的标准偏差。若sigmaY为零，就将它设为sigmaX，如果sigmaX和sigmaY都是0，那么就由ksize.width和ksize.height计算出来。
    为了结果的正确性着想，最好是把第三个参数Size，第四个参数sigmaX和第五个参数sigmaY全部指定到。
    borderType，用于推断图像外部像素的某种边界模式。注意它有默认值BORDER_DEFAULT。

ps:
    高斯核函数：自己找找看，其实看上去就是普通的正态分布函数形式。
    我猜ksize是模糊半径的意思，水平方向和竖直方向的半径不一样，需要指定。
    标准偏差就是标准偏差……


cv2.imshow('original',img)
cv2.imshow('(5,5)x1',gaussian1)

cv2.waitKey(-1)


#均值滤波器能够去除均匀分布和高斯分布的噪声，但是在过滤掉噪声的同时，会对图像造成一定的模糊，使用的窗口越大，造成的模糊也就越明显
在文件夾中打開terminal
輸入$ python smooth.py 進行編譯

OpenCV-Python：图像的读取、显示和保存:http://blog.topspeedsnail.com/archives/2055
