
Z = img.reshape((-1,3))
about numpy.reshape

官方link：
https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.reshape.html
三维怎么理解？：
https://blog.csdn.net/qq_28618765/article/details/78083895
note:-1则表示可以自动推测出

# convert to np.float32
Z = np.float32(Z)
about numpy.数组类型和类型之间的转换 
一个博客：https://segmentfault.com/a/1190000004681332
u盘也有系统的资料查阅

# define criteria, number of clusters(K) and apply kmeans()
criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 10, 1.0)
K = 8
criteria的参数是：（类型，doing something again and again的最大值，需要的精度）
from官方doc：
https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.html#kmeans-opencv


ret,label,center=cv2.kmeans(Z,K,None,criteria,10,cv2.KMEANS_RANDOM_CENTERS)
cv2.means的参数是：kmeans(data, K, bestLabels, criteria, attempts, flags)
data: 分类数据，最好是np.float32的数据，每个特征放一列。
K: 分类数
bestLabels：预设的分类标签 没有的话 None
criteria：迭代停止的模式选择 3种
attempts：重复试验kmeans算法次数
flags：初始类中心选择 2种
也可 from官方doc：
https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.html#kmeans-opencv
# Now convert back into uint8, and make original image
center = np.uint8(center)
res = center[label.flatten()]
res2 = res.reshape((img.shape))

from:https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.html#data-with-only-one-feature
